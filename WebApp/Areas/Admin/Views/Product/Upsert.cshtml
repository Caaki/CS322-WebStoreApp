@model ProductVM

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient m-lg-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                          <h2 class="text-primary">
                @(Model.Product.Id != 0 ? "Update Product": "Create Product")
            </h2>
           </div>
        </div>
    </div>

    <div class="card-body p-4">

<form method="post" enctype="multipart/form-data">
    

            <input hidden asp-for="Product.Id"/>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
           <div class="border p-3 mt-4">


                <div class="row">
                    <div class="col-md-9">
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <div class="form-floating py-2 col-12 mb-4">
                                    <input asp-for="Product.Title" class="form-control border-2 shadow">
                                    <label asp-for="Product.Title" class="ms-2">Book Title</label>
                                    <span asp-validation-for="Product.Title" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-floating py-2 col-12 mb-4">
                                    <input asp-for="Product.Author" class="form-control border-2 shadow">
                                    <label asp-for="Product.Author" class="ms-2">Author</label>
                                    <span asp-validation-for="Product.Author" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-3">
                        @if (Model.Product.ImageUrl != null)
                        {
                            
                        <img src="@Model.Product.ImageUrl" class="img-fluid" alt="Product Image">
                        }
                    </div>
                </div>





            <div class="form-floating py-2 col-12 mb-4">
                    <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-select border-2 shadow">
                    
                    <option disabled selected>--Select Category--</option>

                </select>
                    <label asp-for="CategoryList" class="ms-2">Category</label>
                    <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
            </div>

            <div class="py-2 col-12 mb-4">
                    <label asp-for="Product.Description" class="ms-2 text-muted">Description</label>
                    <textarea asp-for="Product.Description" class="form-control border-2 shadow"></textarea>
            </div>

            <div class="form-floating py-2 col-12 mb-4">
                    <input asp-for="Product.ISBN" class="form-control border-2 shadow">
                    <label asp-for="Product.ISBN" class="ms-2">ISBN</label>
                    <span asp-validation-for="Product.ISBN" class="text-danger"></span>
            </div>

            <div class="form-floating py-2 col-12 mb-4">
                    <input asp-for="Product.Price" class="form-control border-2 shadow">
                    <label asp-for="Product.Price" class="ms-2">Price 1-50</label>
                    <span asp-validation-for="Product.Price" class="text-danger"></span>
            </div>

            <div class="form-floating py-2 col-12 mb-4">
                    <input asp-for="Product.Price50"  class="form-control border-2 shadow">
                    <label asp-for="Product.Price50" class="ms-2">Price 50-100</label>
                    <span asp-validation-for="Product.Price50" class="text-danger"></span>
            </div>

            <div class="form-floating py-2 col-12 mb-4">
                    <input asp-for="Product.Price100"  class="form-control border-2 shadow">
                    <label asp-for="Product.Price100" class="ms-2">Price 100+</label>
                    <span asp-validation-for="Product.Price100" class="text-danger"></span>
            </div>
            <div class="form-floating py-2 col-4 mb-4">
                    <input type="file" name="file" class="form-control bg-light border-2 shadow btn btn-secondary mt-3 pb-3 pt-3 ">
                    <label asp-for="Product.ImageUrl" class="ms-2" ></label>
            </div>

            <div class="row">
                <div class="col-6 p-1">
                        @if(Model.Product.Id != 0)
                        {
                        <button type="submit" class="btn btn-primary form-control" >
                           Update</button>
                        }
                        else
                        {
                        <button type="submit" class="btn btn-primary form-control" >
                            Create</button>
                        }
                    </div>

                <div class="col-6 p-1">
                     <a asp-area="Admin" asp-controller="Product" asp-action="Index" class="btn btn-outline-secondary border form-control" >
                     Back to list</a>
                </div>
            </div>
</div>
</form>


    </div>

</div>



@section Scripts{
    <script>
  tinymce.init({
    selector: 'textarea',
    plugins: 'ai tinycomments mentions anchor autolink charmap codesample emoticons lists table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed permanentpen footnotes advtemplate advtable advcode editimage tableofcontents mergetags powerpaste tinymcespellchecker autocorrect a11ychecker typography inlinecss',
    toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | align lineheight | tinycomments | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
    tinycomments_mode: 'embedded',
    tinycomments_author: 'Author name',
    mergetags_list: [
      { value: 'First.Name', title: 'First Name' },
      { value: 'Email', title: 'Email' },
    ],
    ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
  });
</script>
    @{
        <partial name="_ValidationScriptsPartial"/>

    }
}

